<?php

/**
 * @file
 * Functions to support theming.
 */

use Drupal\block\Entity\Block;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_image_widget().
 */
function alps_trips_preprocess_image_widget(array &$variables) {
  $data = &$variables['data'];

  // This prevents image widget templates from rendering preview container HTML
  // to users that do not have permission to access these previews.
  // @todo revisit in https://drupal.org/node/953034
  // @todo revisit in https://drupal.org/node/3114318
  if (isset($data['preview']['#access']) && $data['preview']['#access'] === FALSE) {
    unset($data['preview']);
  }
}

/**
 * Implements hook_preprocess_region().
 */
function alps_trips_preprocess_region(&$variables): void {
  if ($variables['region'] == 'footer') {
    $variables['site_name'] = Drupal::config('system.site')->get('name');
    $variables['copyright'] = theme_get_setting('copyright');

    $socials = [];

    if (theme_get_setting('twitter')) {
      $socials[] = [
        'url' => theme_get_setting('twitter'),
        'svg' => 'M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84',
      ];
    }

    if (theme_get_setting('facebook')) {
      $socials[] = [
        'url' => theme_get_setting('facebook'),
        'svg' => 'M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z',
      ];
    }

    if (theme_get_setting('github')) {
      $socials[] = [
        'url' => theme_get_setting('github'),
        'svg' => 'M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z',
      ];
    }

    $variables['socials'] = $socials;
  }
}

/**
 * Implements hook_preprocess_block().
 */
function alps_trips_preprocess_block(&$variables): void {
  if (array_key_exists('#block_content', $variables['elements']['content'])) {
    /** @var \Drupal\block_content\Entity\BlockContent $block_content */
    $block_content = $variables['elements']['content']['#block_content'];

    $variables['block_content'] = $block_content;

    // Remove next comment lines to add custom block content variables for the
    // block--type_banner.html.twig template.
    $id = $variables['elements']['#id'];
    if ($id == 'alps_trips_iceclimber') {
      $variables['link'] = $block_content
        ->get('field_link')->first()->getUrl()
        ->toString();
      $variables['title'] = $block_content
        ->get('field_link')->first()->get('title')
        ->getValue();
      $variables['image'] = $block_content
        ->get('field_image')
        ->entity->get('field_media_image')->entity
        ->get('uri')->first()->get('url')->getValue();
      $variables['cta'] = $block_content
        ->get('field_cta')->first()->get('value')
        ->getValue();
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function alps_trips_theme_suggestions_region_alter(array &$suggestions, array $variables): void {
  if (!empty($variables['elements']['#region'])) {

    // Add a suggestion if we are on the front page.
    if (Drupal::service('path.matcher')->isFrontPage()) {
      $suggestions[] =
        'region__' . $variables['elements']['#region'] . '__front';
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function alps_trips_theme_suggestions_block_alter(array &$suggestions, array $variables): void {
  // Add a suggestion with the block region.
  $elements = $variables['elements'];
  if (array_key_exists('#id', $elements)) {
    $block = Block::load($elements['#id']);
    $suggestions[] = 'block__' . $block->getRegion();
  }

  if (array_key_exists('#block_content', $elements['content'])) {
    /** @var \Drupal\block_content\Entity\BlockContent $block_content */
    $block_content = $elements['content']['#block_content'];
    $block_bundle = $block_content->bundle();
    $suggestions[] = 'block__type_' . $block_bundle;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function alps_trips_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables): void {
  /** @var \Drupal\taxonomy\TermInterface $term */
  $term = $variables['elements']['#taxonomy_term'];
  $view_mode = $variables['elements']['#view_mode'];

  $suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $view_mode;
  $suggestions[] = 'taxonomy_term__' . $view_mode;
}

/**
 * Implements hook_theme().
 */
function alps_trips_theme(): array {
  return [
    'user_login_form' => [
      'render element' => 'form',
      'template' => 'form/user-login-form',
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function alps_trips_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id): void {
  $form['name']['#description'] = t('Enter your username.');
}

/**
 * Implements hook_page_attachments_alter().
 */
function alps_trips_page_attachments_alter(array &$attachments): void {
  $attachments['#attached']['drupalSettings']['alps_trips'] = [
    'copyright' => theme_get_setting('copyright'),
  ];
}
